{
    "success": false,
    "error": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/__main__.py\", line 835, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/__main__.py\", line 100, in process_all\n    ) = process_single(compilation, args, detector_classes, printer_classes)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/__main__.py\", line 75, in process_single\n    falcon = Falcon(target, ast_format=ast, **vars(args))\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/falcon.py\", line 129, in __init__\n    parser.analyze_contracts()\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/solc_parsing/falcon_compilation_unit_solc.py\", line 507, in analyze_contracts\n    self._convert_to_falconir()\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/solc_parsing/falcon_compilation_unit_solc.py\", line 690, in _convert_to_falconir\n    func.generate_falconir_and_analyze()\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/core/declarations/function.py\", line 1701, in generate_falconir_and_analyze\n    node.falconir_generation()\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/core/cfg/node.py\", line 719, in falconir_generation\n    self._irs = convert_expression(expression, self)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/ir/convert.py\", line 116, in convert_expression\n    visitor = ExpressionToFalconIR(expression, node)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/falconir/expression_to_falconir.py\", line 143, in __init__\n    self._visit_expression(self.expression)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 45, in _visit_expression\n    self._visit_assignement_operation(expression)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 101, in _visit_assignement_operation\n    self._visit_expression(expression.expression_right)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 63, in _visit_expression\n    self._visit_index_access(expression)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 131, in _visit_index_access\n    self._visit_expression(expression.expression_left)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 63, in _visit_expression\n    self._visit_index_access(expression)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 132, in _visit_index_access\n    self._visit_expression(expression.expression_right)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 95, in _visit_expression\n    self._post_visit(expression)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/expression/expression.py\", line 274, in _post_visit\n    self._post_conditional_expression(expression)\n  File \"/usr/local/lib/python3.10/dist-packages/falcon_analyzer-0.2.28-py3.10.egg/falcon/visitors/falconir/expression_to_falconir.py\", line 355, in _post_conditional_expression\n    raise Exception(f\"Ternary operator are not convertible to FalconIR {expression}\")\nException: Ternary operator are not convertible to FalconIR if _isETH(_fromToken) then WETH else _fromToken\n",
    "results": {},
    "engine_version": "0.2.28"
}